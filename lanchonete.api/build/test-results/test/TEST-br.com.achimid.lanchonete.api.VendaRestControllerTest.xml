<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="br.com.achimid.lanchonete.api.VendaRestControllerTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2018-01-25T02:16:35" hostname="lourran-PC" time="0.675">
  <properties/>
  <testcase name="rest01VendaCheckout" classname="br.com.achimid.lanchonete.api.VendaRestControllerTest" time="0.344"/>
  <testcase name="rest02GetVenda" classname="br.com.achimid.lanchonete.api.VendaRestControllerTest" time="0.184"/>
  <testcase name="none" classname="br.com.achimid.lanchonete.api.VendaRestControllerTest" time="0.143"/>
  <system-out><![CDATA[2018-01-25 00:16:35.529  INFO 18555 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [br.com.achimid.lanchonete.api.VendaRestControllerTest], using SpringBootContextLoader
2018-01-25 00:16:35.529  INFO 18555 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [br.com.achimid.lanchonete.api.VendaRestControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-01-25 00:16:35.533  INFO 18555 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-01-25 00:16:35.536  INFO 18555 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66b0b1e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@696dc726, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3836ca01, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c6fd644, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4f3375a7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@48e0cf90, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4688624f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1487412c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@404d8056, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@e9f4b80, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b00da06, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2520646b]
2018-01-25 00:16:35.542  INFO 18555 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-01-25 00:16:35.542  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-01-25 00:16:35.546  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 4 ms
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into venda (data_venda, valor_final) values (?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into venda (data_venda, valor_final) values (?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
2018-01-25 00:16:35.889  INFO 18555 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-01-25 00:16:35.891  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-01-25 00:16:35.894  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 3 ms
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into venda (data_venda, valor_final) values (?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: select venda0_.id_venda as id_venda1_3_0_, venda0_.data_venda as data_ven2_3_0_, venda0_.valor_final as valor_fi3_3_0_ from venda venda0_ where venda0_.id_venda=?
Hibernate: select listaitens0_.id_venda_item as id_venda1_4_0_, listaitens0_.id_venda_item as id_venda1_4_1_, listaitens0_.produto_id_produto as produto_4_4_1_, listaitens0_.qtde as qtde2_4_1_, listaitens0_.valor as valor3_4_1_, listaitens0_.venda_id_venda as venda_id5_4_1_, produto1_.id_produto as id_produ1_2_2_, produto1_.categoria_id_categoria as categori7_2_2_, produto1_.descricao as descrica2_2_2_, produto1_.nome as nome3_2_2_, produto1_.url_img as url_img4_2_2_, produto1_.valor_custo as valor_cu5_2_2_, produto1_.valor_venda as valor_ve6_2_2_, categoria2_.id_categoria as id_categ1_0_3_, categoria2_.descricao as descrica2_0_3_, categoria2_.nome as nome3_0_3_, categoria2_.url_img as url_img4_0_3_ from venda_item listaitens0_ left outer join produto produto1_ on listaitens0_.produto_id_produto=produto1_.id_produto left outer join categoria categoria2_ on produto1_.categoria_id_categoria=categoria2_.id_categoria where listaitens0_.id_venda_item=?
Hibernate: select pagamentos0_.id_venda_pagamento as id_venda1_5_0_, pagamentos0_.id_venda_pagamento as id_venda1_5_1_, pagamentos0_.forma_pagamento_id_forma_pagamento as forma_pa3_5_1_, pagamentos0_.valor as valor2_5_1_, pagamentos0_.venda_id_venda as venda_id4_5_1_, formapagam1_.id_forma_pagamento as id_forma1_1_2_, formapagam1_.ativo as ativo2_1_2_, formapagam1_.nome as nome3_1_2_ from venda_pagamento pagamentos0_ inner join forma_pagamento formapagam1_ on pagamentos0_.forma_pagamento_id_forma_pagamento=formapagam1_.id_forma_pagamento where pagamentos0_.id_venda_pagamento=?
2018-01-25 00:16:36.074  INFO 18555 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-01-25 00:16:36.074  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-01-25 00:16:36.077  INFO 18555 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 3 ms
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into categoria (descricao, nome, url_img) values (?, ?, ?)
Hibernate: insert into produto (categoria_id_categoria, descricao, nome, url_img, valor_custo, valor_venda) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into forma_pagamento (ativo, nome) values (?, ?)
Hibernate: insert into venda (data_venda, valor_final) values (?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_item (produto_id_produto, qtde, valor, venda_id_venda) values (?, ?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
Hibernate: insert into venda_pagamento (forma_pagamento_id_forma_pagamento, valor, venda_id_venda) values (?, ?, ?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
